%% Import data from text file.
% Script for importing data from the following text file:
%
%    C:\perforce\sandbox\english\mlbe_o\files\exercises\atmosphere\Standard_Atmosphere.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/08/04 15:27:03

%% Initialize variables.
filename = 'C:\perforce\sandbox\english\mlbe_o\files\exercises\atmosphere\Standard_Atmosphere.txt';
delimiter = ' ';
startRow = 9;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow-1, 'WhiteSpace', '', 'ReturnOnError', false, 'EndOfLine', '\r\n');
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'EmptyValue' ,NaN,'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
alt = dataArray{:, 1};
temp = dataArray{:, 2};
press = dataArray{:, 3};
den = dataArray{:, 4};
sos = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;

%% Generate stdAtmo1.fig

figure
subplot(2,1,1)
semilogx(den,alt)
hold on
semilogx(press,alt)
hold off
title('Properties of the 1976 Standard Atmosphere')
xlabel('Density [kg/m^3] and Pressure [Pa]')
ylabel('Altitude [m]')
legend('Density','Pressure')

subplot(2,1,2)
plot(temp,sos,'.')
xlabel('Temperature [K]')
ylabel('Speed of Sound [m/s]')
